FROM mcr.microsoft.com/dotnet/framework/sdk:4.8 as runtime_test

# Set the environment variables for the paths
ENV CMAKE_VERSION=3.29.3
ENV CMAKE_INSTALL_DIR="C:\\CMake"

SHELL ["powershell", "-Command", "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12;"]

# Download and install CMake
RUN Invoke-WebRequest -Uri "https://github.com/Kitware/CMake/releases/download/v${env:CMAKE_VERSION}/cmake-${env:CMAKE_VERSION}-windows-x86_64.zip" -OutFile "cmake.zip"; Expand-Archive -Path "cmake.zip" -DestinationPath $env:CMAKE_INSTALL_DIR; Remove-Item -Force cmake.zip


# Add CMake to PATH
RUN setx /M PATH $($Env:PATH + ';C:\CMake\cmake-3.29.3-windows-x86_64\bin')

ENV QT_VERSION=5.15.2 \
    QT_INSTALL_DIR="C:\\Qt"

# Install Chocolatey and Qt
RUN Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor [System.Net.SecurityProtocolType]::Tls12;iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1')); choco install -y qt5-default --version=5.15.2

ENV GTEST_INSTALL_DIR="C:\\gtest-Out"

# Download and install git
RUN choco install -y git

# Verify installation
RUN cmake --version

# Set the working directory
WORKDIR /app

# Set entrypoint
ENTRYPOINT ["cmd"]