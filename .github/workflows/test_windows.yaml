name: Test runtime on Windows

on:
  # execute on every PR made targeting the branches bellow
  pull_request:
    branches:
      - main
      - develop # can be removed on main merge
    paths: # we only include paths critical for building to avoid unnecessary runs
      - src/**
      - include/**
      - scripts/cmake/**
      - test/**
      - .github/workflows/**
      - doc/**
      - runtime/**
      - docker/**

  # execute on every push made targeting the branches bellow
  push:
    branches:
      - main
      - develop # can be removed on main merge
    paths: # we only include paths critical for building to avoid unnecessary runs
      - src/**
      - include/**
      - scripts/cmake/**
      - test/**
      - .github/workflows/**
      - doc/**
      - runtime/**
      - docker/**

  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  build-windows:
    runs-on: windows-2022
    env:
      WORKING_PATH: "D:\\a"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Execute pre built TextReport exe
        run: |
          cd D:\\a\qc-framework\\qc-framework\\.github\\workflows\\windows-pre-built\\bin
          dir
          .\TextReport.exe

      - name: Execute pre built ResultPooling exe
        run: |
          cd D:\\a\qc-framework\\qc-framework\\.github\\workflows\\windows-pre-built\\bin

          $process = Start-Process -FilePath ".\ResultPooling.exe" -ArgumentList "--help" -RedirectStandardOutput "output.txt" -Wait -PassThru

          # Read the output from the file
          $output = Get-Content "output.txt"

          # Print the content of the output file
          Write-Output "Process Output:"
          Write-Output $output

          # Print all information about the process
          Write-Output "Process ID: $($process.Id)"
          Write-Output "Process Name: $($process.ProcessName)"
          Write-Output "Process Path: $($process.MainModule.FileName)"
          Write-Output "Start Time: $($process.StartTime)"
          Write-Output "Exit Time: $($process.ExitTime)"
          Write-Output "Has Exited: $($process.HasExited)"
          Write-Output "Exit Code: $($process.ExitCode)"
          Write-Output "CPU Time: $($process.TotalProcessorTime)"
          Write-Output "Working Set (Memory): $($process.WorkingSet)"
          Write-Output "Responding: $($process.Responding)"

        shell: pwsh
