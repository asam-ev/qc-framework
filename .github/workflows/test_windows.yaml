name: Test runtime on Windows

on:
  # execute on every PR made targeting the branches bellow
  pull_request:
    branches:
      - main
      - develop # can be removed on main merge
    paths: # we only include paths critical for building to avoid unnecessary runs
      - src/**
      - include/**
      - scripts/cmake/**
      - test/**
      - .github/workflows/**
      - doc/**
      - runtime/**
      - docker/**

  # execute on every push made targeting the branches bellow
  push:
    branches:
      - main
      - develop # can be removed on main merge
    paths: # we only include paths critical for building to avoid unnecessary runs
      - src/**
      - include/**
      - scripts/cmake/**
      - test/**
      - .github/workflows/**
      - doc/**
      - runtime/**
      - docker/**

  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  build-windows:
    runs-on: windows-2019
    env:
      WORKING_PATH: "D:\\a"

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Setup runtime
        run: |
          pip install asam-qc-runtime@git+https://github.com/asam-ev/qc-framework@develop#subdirectory=runtime
          pip install asam-qc-opendrive@git+https://github.com/asam-ev/qc-opendrive@develop
          pip install asam-qc-openscenarioxml@git+https://github.com/asam-ev/qc-openscenarioxml@develop
          pip install asam-qc-otx@git+https://github.com/asam-ev/qc-otx@develop

        shell: pwsh

      - name: Execute checker bundles runtime
        run: |
          mkdir "$env:WORKING_PATH\odr_out"
          mkdir "$env:WORKING_PATH\osc_out"
          mkdir "$env:WORKING_PATH\otx_out"
          qc_runtime --config="$env:WORKING_PATH\qc-framework\qc-framework\.github\workflows\windows-files\odr_config.xml" --manifest="$env:WORKING_PATH\qc-framework\qc-framework\.github\workflows\windows-manifest\framework.json" --working_dir="$env:WORKING_PATH\odr_out"
          qc_runtime --config="$env:WORKING_PATH\qc-framework\qc-framework\.github\workflows\windows-files\osc_config.xml" --manifest="$env:WORKING_PATH\qc-framework\qc-framework\.github\workflows\windows-manifest\framework.json" --working_dir="$env:WORKING_PATH\osc_out"
          qc_runtime --config="$env:WORKING_PATH\qc-framework\qc-framework\.github\workflows\windows-files\otx_config.xml" --manifest="$env:WORKING_PATH\qc-framework\qc-framework\.github\workflows\windows-manifest\framework.json" --working_dir="$env:WORKING_PATH\otx_out"

          if (-not (Test-Path "$env:WORKING_PATH\odr_out\xodr_bundle_report.xqar")) { Throw "Error: Odr output does not exist." }
          if (-not (Test-Path "$env:WORKING_PATH\osc_out\xosc_bundle_report.xqar")) { Throw "Error: Osc output does not exist." }
          if (-not (Test-Path "$env:WORKING_PATH\otx_out\otx_bundle_report.xqar")) { Throw "Error: Otx output does not exist." }




        shell: pwsh
